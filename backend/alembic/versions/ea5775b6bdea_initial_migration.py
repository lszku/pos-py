"""Initial migration

Revision ID: ea5775b6bdea
Revises:
Create Date: 2025-07-30 21:34:16.198028

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ea5775b6bdea"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table("products",
    sa.Column("id", sa.UUID(), nullable=False),
    sa.Column("name", sa.String(length=255), nullable=False),
    sa.Column("description", sa.Text(), nullable=True),
    sa.Column("sku", sa.String(length=100), nullable=False),
    sa.Column("category", sa.Enum("DOG_FOOD", "CAT_FOOD", "BIRD_FOOD", "FISH_FOOD", "REPTILE_FOOD", "DOG_ACCESSORIES", "CAT_ACCESSORIES", "BIRD_ACCESSORIES", "FISH_ACCESSORIES", "REPTILE_ACCESSORIES", "TOYS", "HEALTH_CARE", "GROOMING", "BEDDING", "OTHER", name="productcategory"), nullable=False),
    sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("cost_price", sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column("image_url", sa.String(length=500), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("updated_at", sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_products_name"), "products", ["name"], unique=False)
    op.create_index(op.f("ix_products_sku"), "products", ["sku"], unique=True)
    op.create_table("users",
    sa.Column("id", sa.UUID(), nullable=False),
    sa.Column("email", sa.String(length=255), nullable=False),
    sa.Column("hashed_password", sa.String(length=255), nullable=True),
    sa.Column("full_name", sa.String(length=255), nullable=True),
    sa.Column("role", sa.Enum("ADMIN", "MANAGER", "CASHIER", "VIEWER", name="userrole"), nullable=False),
    sa.Column("google_id", sa.String(length=255), nullable=True),
    sa.Column("is_active", sa.Boolean(), nullable=False),
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("updated_at", sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint("id"),
    sa.UniqueConstraint("google_id")
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table("sales",
    sa.Column("id", sa.UUID(), nullable=False),
    sa.Column("reference", sa.String(length=100), nullable=False),
    sa.Column("customer_name", sa.String(length=255), nullable=True),
    sa.Column("customer_email", sa.String(length=255), nullable=True),
    sa.Column("total_amount", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("discount_amount", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("tax_amount", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("final_amount", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("status", sa.Enum("PENDING", "COMPLETED", "CANCELLED", "REFUNDED", name="salestatus"), nullable=False),
    sa.Column("payment_method", sa.String(length=50), nullable=True),
    sa.Column("notes", sa.String(length=500), nullable=True),
    sa.Column("created_by", sa.UUID(), nullable=False),
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("completed_at", sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(["created_by"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_sales_reference"), "sales", ["reference"], unique=False)
    op.create_table("stock_entries",
    sa.Column("id", sa.UUID(), nullable=False),
    sa.Column("reference", sa.String(length=100), nullable=False),
    sa.Column("notes", sa.String(length=500), nullable=True),
    sa.Column("supplier", sa.String(length=255), nullable=True),
    sa.Column("total_cost", sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column("is_completed", sa.Boolean(), nullable=False),
    sa.Column("created_by", sa.UUID(), nullable=False),
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("completed_at", sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(["created_by"], ["users.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_index(op.f("ix_stock_entries_reference"), "stock_entries", ["reference"], unique=False)
    op.create_table("sale_items",
    sa.Column("id", sa.UUID(), nullable=False),
    sa.Column("sale_id", sa.UUID(), nullable=False),
    sa.Column("product_id", sa.UUID(), nullable=False),
    sa.Column("quantity", sa.Integer(), nullable=False),
    sa.Column("unit_price", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("discount_amount", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("total_amount", sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(["product_id"], ["products.id"], ),
    sa.ForeignKeyConstraint(["sale_id"], ["sales.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    op.create_table("stock",
    sa.Column("id", sa.UUID(), nullable=False),
    sa.Column("product_id", sa.UUID(), nullable=False),
    sa.Column("stock_entry_id", sa.UUID(), nullable=True),
    sa.Column("quantity", sa.Integer(), nullable=False),
    sa.Column("cost_price", sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column("expiry_date", sa.DateTime(), nullable=True),
    sa.Column("status", sa.Enum("AVAILABLE", "LOW_STOCK", "OUT_OF_STOCK", "DISCONTINUED", name="stockstatus"), nullable=False),
    sa.Column("location", sa.String(length=100), nullable=True),
    sa.Column("created_at", sa.DateTime(), nullable=False),
    sa.Column("updated_at", sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(["product_id"], ["products.id"], ),
    sa.ForeignKeyConstraint(["stock_entry_id"], ["stock_entries.id"], ),
    sa.PrimaryKeyConstraint("id")
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("stock")
    op.drop_table("sale_items")
    op.drop_index(op.f("ix_stock_entries_reference"), table_name="stock_entries")
    op.drop_table("stock_entries")
    op.drop_index(op.f("ix_sales_reference"), table_name="sales")
    op.drop_table("sales")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_products_sku"), table_name="products")
    op.drop_index(op.f("ix_products_name"), table_name="products")
    op.drop_table("products")
    # ### end Alembic commands ###
